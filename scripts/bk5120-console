#!/usr/bin/env python3
"""Small console to test different bus terminals with the BK5120 CANopen bus coupler"""
# pylint: disable=invalid-name

import argparse
import sys

import bk5120
import canopen

DEFAULT_INTERFACE = "can0"
DEFAULT_ID = 1
DEFAULT_EDS = "BK5120.eds"


def parse_cli():
    """Parse command line arguments from sys.argv

    :return: Parsed command line arguments
    :rtype: argparse.Namespace
    """
    cli_parser = argparse.ArgumentParser(
        description="Control a BK5120 CANopen bus coupler"
    )

    cli_parser.add_argument(
        "interface",
        type=str,
        nargs="?",
        default=DEFAULT_INTERFACE,
        help=f"Socketcan interface to use (default: {DEFAULT_INTERFACE})",
    )
    cli_parser.add_argument(
        "id",
        type=int,
        nargs="?",
        default=DEFAULT_ID,
        help=f"Node id to connect to (default: {DEFAULT_ID})",
    )
    cli_parser.add_argument(
        "eds",
        type=argparse.FileType("r"),
        nargs="?",
        default=DEFAULT_EDS,
        help=f"Path to EDS file for the node (default: {DEFAULT_EDS})",
    )

    return cli_parser.parse_args()


def main():
    """Console entry point"""
    args = parse_cli()
    print(
        (
            f"Using node {args.id} on interface {args.interface} with EDS file"
            f"{args.eds.name}"
        )
    )

    # Connect to bus
    with canopen.Network() as network:
        try:
            network.connect(bustype="socketcan", channel=args.interface)
        except OSError as ex:
            print(f"Could not open socketcan interface {args.interface}: {ex}")
            sys.exit(1)

        node = network.add_node(args.id, args.eds)

        console_cmds = [bk5120.DeviceCmd(node)]
        console = bk5120.Console(
            network, node, auto_load_commands=False, command_sets=console_cmds
        )
        return console.cmdloop()


if __name__ == "__main__":
    main()
